{"version":3,"sources":["reducer/constants.js","reducer/steps.js","reducer/resume.js","components/utils/Stepper.jsx","components/steps/Navigation.jsx","components/utils/Button.jsx","components/utils/StepAction.js","components/utils/PagesHeading.jsx","components/utils/TextField.jsx","pages/forms/PersonalInfo.jsx","components/utils/ToolTip.jsx","components/utils/DropDown.jsx","components/utils/OutlineButton.jsx","components/steps/EducationComponent.jsx","components/steps/EducationDisplay.jsx","pages/forms/Education.jsx","components/utils/Editor.jsx","components/steps/ExperienceComponent.jsx","components/steps/ExperienceDisplay.jsx","pages/forms/Experience.jsx","pages/forms/ScholaristicAchievement.jsx","components/steps/ProjectComponent.jsx","components/steps/ProjectDisplay.jsx","pages/forms/Project.jsx","pages/forms/Skill.jsx","components/utils/Table.jsx","images/MNITLOGO.png","pages/templates/MNITresume.jsx","pages/PagesController.jsx","pages/Page/BuildReume.jsx","images/Component.svg","images/MNITresume.png","pages/Page/Template.jsx","components/utils/Accordion.jsx","images/demo.png","pages/Page/Landing.jsx","images/logo.svg","components/navbar/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADD_STEP","UPDATE_STATUS","ADD_METADATA","RESET","initialSteps","heading","completed","optional","skipped","initialMetaData","fname","lname","stream","branch","city","zip","state","phone","college","email","linkedin","github","personal","gender","dob","templates","stepsReducer","action","type","payload","new_state","forEach","step","push","temp_state","resumeReducer","metadata","HorizontalLinearStepper","steps","optionalSteps","activeStep","setActiveStep","isStepOptional","setSkipped","has","isStepSkipped","Box","sx","width","Stepper","map","label","index","stepProps","labelProps","Typography","variant","Step","StepLabel","Navigation","stepsState","React","useContext","StepsContext","useState","stepsBuild","setStepsBuild","Set","stepsMetadata","setStepsMetadata","useEffect","length","new_step","new_optional","add","activeStep_","skipped_","parseInt","id","IconLabelButtons","handleClick","endIcon","params","Button","onClick","disableElevation","back","stepsDispatch","metaData","PagesHeading","information","component","gutterBottom","display","BasicTextFields","handleChange","name","value","param","TextField","placeholder","fullWidth","onChange","size","PersonalInfo","MetaDataContext","resumeState","resumeDispatch","event","new_personal_info_metadata","target","Container","Grid","container","spacing","item","xs","md","InputProps","startAdornment","InputAdornment","position","ToolTip","text","buttonName","HtmlTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","title","align","msg","ml","mt","DropDown","handleDropdownChange","options","FormControl","Select","option","MenuItem","degreeOptions","initialState","degree","field","date","grade","EducationComponent","handleAdd","setMetaData","prev","style","borderRadius","padding","marginBottom","alignItems","EducationDisplay","handleRemove","writing_tips","Education","removeEducation","new_education_metadata","splice","education","MyStatefulEditor","RichTextEditor","createEmptyValue","setState","toString","this","toolbarConfig","INLINE_STYLE_BUTTONS","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","Component","employer","role","sdate","edate","description","ExperienceComponent","jobDescription","ExperienceDisplay","dangerouslySetInnerHTML","__html","marginTop","Experience","removeExperience","new_experience_metadata","experience","ScholaristicAchievement","skill","stack","link","ProjectComponent","projectDescription","ProjectDisplay","Project","removeProject","new_project_metadata","project","BasicTable","column","rows","TableContainer","Table","TableHead","TableRow","element","TableCell","gap","fontWeight","pb","TableBody","row","i","scope","SectionDivider","topic","MNITresume","window","print","src","logo","height","href","direction","temp","generateRows","work","PagesController","currentState","setCurrentState","found","console","log","Skill","PagePicker","justifyContent","disableRipple","next","BuildReume","ImageHoverZoom","imagePath","history","useHistory","alt","pt","gutterbottom","Template","template","mnitresume","SimpleAccordion","titles","descriptions","Accordion","mb","AccordionSummary","expandIcon","AccordionDetails","points","Landing","point","styleresume","Navbar","margin","marginLeft","cursor","createContext","App","useReducer","Provider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7b795df.chunk.js","sourcesContent":["export let ADD_STEP= \"add_step\"\r\nexport let UPDATE_STATUS= \"update_status_of_timeline\"\r\nexport let ADD_METADATA = \"add_metadata\"\r\nexport let RESET= \"reset\"\r\nexport let initialSteps= [\r\n        {\r\n            heading: 'Personal Info',\r\n            completed: false,\r\n            optional: false\r\n        },\r\n        {\r\n            heading: 'Education',\r\n            completed: false,\r\n            optional: false\r\n        },\r\n        {\r\n            heading: 'Experience',\r\n            completed: false,\r\n            optional: false\r\n        },\r\n        {\r\n            heading: 'Project',\r\n            completed: false,\r\n            optional: false\r\n        },\r\n        {\r\n            heading: 'Skills',\r\n            completed: false,\r\n            optional: false\r\n        },\r\n        {\r\n            heading: 'Scholaristic Achievement',\r\n            completed: false,\r\n            optional: true,\r\n            skipped: false\r\n        },\r\n        {\r\n            heading: 'Review and Download',\r\n            completed: false,\r\n            optional: false\r\n        }\r\n        \r\n]\r\n\r\nexport let initialMetaData = {\r\n    'Personal Info': {\r\n        fname: '',\r\n        lname: '',\r\n        stream: '',\r\n        branch:'',\r\n        city: '',\r\n        zip: '',\r\n        state: '',\r\n        phone: '',\r\n        college: '',\r\n        email: '',\r\n        linkedin: '',\r\n        github: '',\r\n        personal: '',\r\n        gender: '',\r\n        dob:''\r\n    },\r\n    'Education': [],\r\n    'Experience': [],\r\n    'Project':[],\r\n    'Skill': '',\r\n    'Scholaristic Achievement':'',\r\n    'Template': '',\r\n    'Print':0\r\n}\r\n\r\nexport const config = {\r\n    toolbar: {\r\n        items: [\r\n            'bold',\r\n            'italic',\r\n            '|',\r\n            'bulletedList',\r\n            'numberedList',\r\n            'indent',\r\n            'outdent',\r\n            '|',\r\n            'heading',\r\n            '|',\r\n            'undo',\r\n            'redo'\r\n        ]\r\n    }\r\n}\r\nexport const templates = ['MNITresume']","import {ADD_STEP,UPDATE_STATUS,RESET} from './constants'\r\n\r\nconst stepsReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_STEP:\r\n            return [\r\n                ...state,\r\n                action.payload\r\n            ]\r\n        case UPDATE_STATUS:\r\n            let new_state = []\r\n            state.forEach(step => {\r\n                if (step.heading !== action.payload.heading)\r\n                    new_state.push(step)\r\n                else\r\n                    new_state.push(action.payload)\r\n            })\r\n            return new_state\r\n        case RESET:\r\n            new_state = []\r\n            state.forEach(step => {\r\n                let temp_state = step\r\n                temp_state.completed = false\r\n                if (temp_state.skipped) {\r\n                    temp_state.skipped=false\r\n                }\r\n                new_state.push(temp_state)\r\n            })\r\n            return new_state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { stepsReducer }","import {ADD_METADATA} from './constants'\r\n\r\nconst resumeReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_METADATA:\r\n            return {\r\n                ...state,\r\n                [action.payload.heading] : action.payload.metadata\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { resumeReducer }","import * as React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function HorizontalLinearStepper({steps,optionalSteps,activeStep, setActiveStep,skipped, setSkipped}) {\r\n  const isStepOptional = (step) => {\r\n    return optionalSteps.has(step);\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  \r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant=\"caption\">Optional</Typography>\r\n            );\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { StepsContext } from '../../App';\r\nimport Stepper from '../utils/Stepper';\r\n\r\nfunction Navigation() {\r\n    const { stepsState } = React.useContext(StepsContext);\r\n    const [stepsBuild, setStepsBuild] = React.useState(false)\r\n    const [stepsMetadata, setStepsMetadata] = React.useState({ steps: [], optional: new Set() })\r\n    // navigation management\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n\r\n    React.useEffect(() => {\r\n\r\n        if (stepsMetadata.steps.length === 0) {\r\n            let new_step = [], new_optional = new Set()\r\n            for (let index in stepsState) {\r\n                let step = stepsState[index]\r\n                new_step.push(step.heading)\r\n                if (step.optional)\r\n                    new_optional.add(index)\r\n            }\r\n            setStepsMetadata({ steps: new_step, optional: new_optional })\r\n        }\r\n        else {\r\n            // there is a change in state of any step\r\n            let activeStep_ = 0, skipped_ = new Set()\r\n            for (let index in stepsState) {\r\n                let step = stepsState[index]\r\n                if (step.skipped)\r\n                    skipped_.add(index)\r\n                if (step.completed === true)\r\n                    activeStep_ = parseInt(index) + 1\r\n            }\r\n            setActiveStep(activeStep_)\r\n            setSkipped(skipped_)\r\n        }\r\n\r\n        setStepsBuild(true)\r\n    }, [stepsState])\r\n\r\n    return (\r\n        <div id=\"printHide\">\r\n            {\r\n                stepsBuild ?\r\n                    <Stepper\r\n                        steps={stepsMetadata.steps}\r\n                        optionalSteps={stepsMetadata.optional}\r\n                        activeStep={activeStep}\r\n                        setActiveStep={setActiveStep}\r\n                        skipped={skipped}\r\n                        setSkipped={setSkipped}\r\n                    /> :\r\n                    <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import * as React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function IconLabelButtons({ label, handleClick, endIcon, ...params }) {\r\n    return (\r\n        <>\r\n            {\r\n                endIcon\r\n                    ?\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        endIcon={endIcon}\r\n                        onClick={handleClick}\r\n                        {...params}\r\n                        disableElevation={true} >\r\n                        {label}\r\n                    </Button >\r\n                    :\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={handleClick}\r\n                        {...params}\r\n                        disableElevation={true}>\r\n                        {label}\r\n                    </Button>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import { ADD_STEP, UPDATE_STATUS,RESET } from '../../reducer/constants'\r\n\r\nexport\r\n    function next(stepsDispatch, metaData) {\r\n    metaData.completed=true\r\n    stepsDispatch({\r\n        type: UPDATE_STATUS, payload: metaData\r\n    })\r\n}\r\n\r\nexport\r\n    function skip(stepsDispatch, metaData) {\r\n    metaData.skipped=true\r\n    stepsDispatch({\r\n        type: UPDATE_STATUS, payload: metaData\r\n    })\r\n}\r\n\r\nexport\r\n    function back(stepsDispatch, metaData) {\r\n    metaData.completed=false\r\n    stepsDispatch({\r\n        type: UPDATE_STATUS, payload: metaData\r\n    })\r\n}\r\n\r\nexport\r\nfunction addStep(stepsDispatch, metaData) {\r\n    stepsDispatch({\r\n        type: ADD_STEP, payload: metaData\r\n    })\r\n}\r\n\r\nexport\r\nfunction reset(stepsDispatch) {\r\n    stepsDispatch({\r\n        type: RESET\r\n    })\r\n}","import React from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction PagesHeading({ heading, information }) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\" component=\"div\" gutterBottom>\r\n                Fill Up your <b>{heading}</b>\r\n            </Typography>\r\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                {information}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PagesHeading\r\n","import * as React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function BasicTextFields({handleChange,label,name,value,...param}) {\r\n  return (\r\n      <>\r\n      <Typography variant=\"subtitle1\" display=\"block\" gutterBottom {...param}>{label}</Typography>\r\n        <TextField placeholder={label} variant=\"outlined\" name={name} value={value} fullWidth onChange={handleChange} size=\"small\" {...param}/>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Heading from '../../components/utils/PagesHeading'\r\nimport { Container, Grid, InputAdornment } from '@material-ui/core';\r\nimport { ADD_METADATA } from '../../reducer/constants'\r\n\r\nimport TextField from '../../components/utils/TextField';\r\n\r\nimport { MetaDataContext } from '../../App';\r\n\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nfunction PersonalInfo({ }) {\r\n    const { resumeState, resumeDispatch } = React.useContext(MetaDataContext)\r\n\r\n    const handleChange = (event) => {\r\n        const new_personal_info_metadata = resumeState['Personal Info']\r\n        new_personal_info_metadata[event.target.name] = event.target.value\r\n        resumeDispatch({\r\n            type: ADD_METADATA,\r\n            payload: {\r\n                heading: 'Personal Info',\r\n                metadata: new_personal_info_metadata\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Heading heading=\"Personal Information\" information=\"Employers will use this information to contact you.\" />\r\n            <br />\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='First Name'\r\n                        name='fname'\r\n                        value={resumeState['Personal Info']['fname']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Last Name'\r\n                        name='lname'\r\n                        value={resumeState['Personal Info']['lname'] ? resumeState['Personal Info']['lname'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Organisation/College'\r\n                        name='college'\r\n                        value={resumeState['Personal Info']['college'] ? resumeState['Personal Info']['college'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Stream'\r\n                        name='stream'\r\n                        value={resumeState['Personal Info']['stream'] ? resumeState['Personal Info']['stream'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Branch'\r\n                        name='branch'\r\n                        value={resumeState['Personal Info']['branch'] ? resumeState['Personal Info']['branch'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='City'\r\n                        name='city'\r\n                        value={resumeState['Personal Info']['city'] ? resumeState['Personal Info']['city'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='State'\r\n                        name='state'\r\n                        value={resumeState['Personal Info']['state'] ? resumeState['Personal Info']['state'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                <TextField\r\n                        handleChange={handleChange}\r\n                        label='ZIP Code'\r\n                        name='zip'\r\n                        value={resumeState['Personal Info']['zip'] ? resumeState['Personal Info']['zip'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Email Address'\r\n                        name='email'\r\n                        value={resumeState['Personal Info']['email'] ? resumeState['Personal Info']['email'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Phone'\r\n                        name='phone'\r\n                        value={resumeState['Personal Info']['phone'] ? resumeState['Personal Info']['phone'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Gender'\r\n                        name='gender'\r\n                        value={resumeState['Personal Info']['gender'] ? resumeState['Personal Info']['gender'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Date Of Birth'\r\n                        name='dob'\r\n                        value={resumeState['Personal Info']['dob'] ? resumeState['Personal Info']['dob'] : ''}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <hr/>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='LinkedIn'\r\n                        name='linkedin'\r\n                        value={resumeState['Personal Info']['linkedin'] ? resumeState['Personal Info']['linkedin'] : ''}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                              <InputAdornment position=\"start\">\r\n                                <LinkedInIcon />\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='GitHub'\r\n                        name='github'\r\n                        value={resumeState['Personal Info']['github'] ? resumeState['Personal Info']['github'] : ''}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                              <InputAdornment position=\"start\">\r\n                                <GitHubIcon />\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Portfolio'\r\n                        name='personal'\r\n                        value={resumeState['Personal Info']['personal'] ? resumeState['Personal Info']['personal'] : ''}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                              <InputAdornment position=\"start\">\r\n                                <AccountCircleIcon />\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PersonalInfo\r\n","import * as React from 'react';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip, { tooltipClasses } from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\n\r\nfunction ToolTip({ heading, text, buttonName }) {\r\n\r\n    const HtmlTooltip = styled(({ className, ...props }) => (\r\n        <Tooltip {...props} classes={{ popper: className }} />\r\n    ))(({ theme }) => ({\r\n        [`& .${tooltipClasses.tooltip}`]: {\r\n            backgroundColor: '#f5f5f9',\r\n            color: 'rgba(0, 0, 0, 0.87)',\r\n            maxWidth: 220,\r\n            fontSize: theme.typography.pxToRem(12),\r\n            border: '1px solid #dadde9',\r\n        },\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <HtmlTooltip\r\n                title={\r\n                    <React.Fragment>\r\n                        <Typography align=\"center\" color=\"inherit\">{heading}</Typography>\r\n                        {\r\n                                text.map(msg => {\r\n                                    return <Typography variant=\"caption\" display=\"block\"  color=\"inherit\">✔️ { msg }</Typography>\r\n                            })\r\n                        }\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n                <Button size=\"small\" sx={{ml:10,mt:2}} endIcon={<EmojiObjectsIcon/>}>{buttonName}</Button>\r\n            </HtmlTooltip>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToolTip\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nfunction DropDown({ handleDropdownChange, label, name, value, options }) {\r\n    const handleChange = (event) => {\r\n        handleDropdownChange(name, event.target.value)\r\n    };\r\n    return (\r\n        <>\r\n            <Typography variant=\"subtitle1\" display=\"block\" gutterBottom>{label}</Typography>\r\n            <FormControl fullWidth>\r\n                <Select\r\n                    value={value}\r\n                    placeholder={label}\r\n                    onChange={handleChange}\r\n                    size=\"small\"\r\n                >\r\n                    {\r\n                        options.map(option => {\r\n                            return <MenuItem value={option}>{option}</MenuItem>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DropDown\r\n","import * as React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function IconLabelButtons({ label, handleClick, endIcon, ...params }) {\r\n    return (\r\n        <>\r\n            {\r\n                endIcon\r\n                    ?\r\n                    <Button variant=\"outlined\" endIcon={endIcon} onClick={handleClick} {...params}>\r\n                        {label}\r\n                    </Button >\r\n                    :\r\n                    <Button variant=\"outlined\" onClick={handleClick} {...params}>\r\n                        {label}\r\n                    </Button>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n//Material\r\nimport { Grid } from '@material-ui/core';\r\n//util\r\nimport TextField from '../utils/TextField'\r\nimport DropDown from '../utils/DropDown'\r\nimport OutlineButton from '../utils/OutlineButton'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nconst degreeOptions = [\r\n    'High School Diploma',\r\n    'GED',\r\n    'Associate of Arts',\r\n    'Associate of Science',\r\n    'Associate of Applied Science',\r\n    'Bachelor of Arts',\r\n    'Bachelor of Science',\r\n    'Bachelor of Technology',\r\n    'BBA',\r\n    'Master of Arts',\r\n    'Master of Science',\r\n    'Ph.D.',\r\n    'Custom Degree'\r\n]\r\n\r\nconst initialState={\r\n    college: '',\r\n    degree: '',\r\n    field: '',\r\n    date: '',\r\n    grade: ''\r\n}\r\nfunction EducationComponent({ handleAdd }) {\r\n    const [metaData, setMetaData] = React.useState(initialState)\r\n    const handleChange = (event) => {\r\n        setMetaData(prev => {\r\n            return {\r\n                ...prev,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        })\r\n    }\r\n    const handleDropdownChange = (name, value) => {\r\n        setMetaData(prev => {\r\n            return {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    const handleClick = () => {\r\n        handleAdd(metaData)\r\n        setMetaData(initialState)\r\n    }\r\n\r\n    return (\r\n        <div style={{border:'.01rem solid grey',borderRadius:'5px',padding:'1rem',marginBottom:'.625rem'}}>\r\n            <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='School/College/University'\r\n                        name='college'\r\n                        value={metaData['college']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <DropDown\r\n                        label='Select a degree'\r\n                        name='degree'\r\n                        handleDropdownChange={handleDropdownChange}\r\n                        value={metaData['degree']}\r\n                        options={degreeOptions}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Field Of Study'\r\n                        name='field'\r\n                        value={metaData['field']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={5}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Graduation Date (Eg: July 2020)'\r\n                        name='date'\r\n                        value={metaData['date']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={5}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Grade'\r\n                        name='grade'\r\n                        value={metaData['grade']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={2} >\r\n                    <OutlineButton label=\"Add\" handleClick={handleClick} endIcon={<AddCircleIcon />} size=\"large\" />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EducationComponent\r\n","import React from 'react'\r\n//Material\r\nimport { Grid,Typography } from '@material-ui/core';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n//util\r\nimport TextField from '../utils/TextField'\r\nimport OutlineButton from '../utils/OutlineButton'\r\n\r\nfunction EducationDisplay({metaData,index,handleRemove}) {\r\n\r\n    const handleChange = (event) => {\r\n        return null\r\n    }\r\n    const handleClick = () => {\r\n        return handleRemove(index)\r\n    }\r\n    \r\n    return (\r\n        <div style={{border:'.01rem solid grey',borderRadius:'5px',padding:'1rem',marginBottom:'.625rem'}}>\r\n            <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='School/College/University'\r\n                        name='college'\r\n                        value={metaData['college']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Select a degree'\r\n                        name='degree'\r\n                        value={metaData['degree']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Field Of Study'\r\n                        name='field'\r\n                        value={metaData['field']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={5}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Graduation Date (Eg: July 2020)'\r\n                        name='date'\r\n                        value={metaData['date']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={5}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Grade'\r\n                        name='grade'\r\n                        value={metaData['grade']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={2} >\r\n                    <OutlineButton\r\n                        label=\"remove\"\r\n                        handleClick={handleClick}\r\n                        endIcon={<DeleteForeverIcon />}\r\n                        size=\"large\"\r\n                        color= 'error' />\r\n                </Grid>\r\n            </Grid>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EducationDisplay\r\n","import React from 'react'\r\n\r\nimport Heading from '../../components/utils/PagesHeading'\r\nimport ToolTip from '../../components/utils/ToolTip'\r\n\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport { ADD_METADATA } from '../../reducer/constants'\r\n\r\nimport { MetaDataContext } from '../../App';\r\n\r\nimport EducationComponent from '../../components/steps/EducationComponent';\r\nimport EducationDisplay from '../../components/steps/EducationDisplay';\r\n\r\nconst writing_tips = [\r\n    'If you have still not graduated, list the date you expect to graduate.',\r\n    'High school graduation shouldn’t be mentioned on your resume unless you haven’t gone to college.',\r\n    'Start off by listing your degrees from most recent to oldest.',\r\n    'Mention any scholarships, honors, awards, and professional certifications you have earned.'\r\n]\r\n\r\nfunction Education() {\r\n    const { resumeState, resumeDispatch } = React.useContext(MetaDataContext)\r\n    const addNewEducation = (education) => {\r\n        let new_education_metadata = resumeState['Education']\r\n        new_education_metadata.push(education)\r\n        resumeDispatch({\r\n            type: ADD_METADATA, payload: {\r\n                heading: 'Education',\r\n                metadata: new_education_metadata\r\n            }\r\n        })\r\n    }\r\n    const removeEducation = (index) => {\r\n        let new_education_metadata = resumeState['Education']\r\n        new_education_metadata.splice(index, 1)\r\n        resumeDispatch({\r\n            type: ADD_METADATA, payload: {\r\n                heading: 'Education',\r\n                metadata: new_education_metadata\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid container>\r\n                <Grid item xs={12} md={8}>\r\n                    <Heading heading=\"Educational Details\" information=\"Add information about your educational background.\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <ToolTip heading=\"Expert tips for you 🏫\" text={writing_tips} buttonName=\"writing tips\" />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <br />\r\n            {\r\n                resumeState.Education.length ?\r\n                    <Typography align=\"center\" variant=\"body1\" display=\"block\" gutterBottom>Your <b>Education</b> Details</Typography> :\r\n                    <></>\r\n            }\r\n            {\r\n                resumeState.Education.map((education, index) => {\r\n                    return <EducationDisplay metaData={education} index={index} handleRemove={removeEducation} />\r\n                })\r\n            }\r\n            {\r\n                resumeState.Education.length ? <><br /><br /></> : <></>\r\n            }\r\n            <Typography align=\"center\" variant=\"body1\" display=\"block\" gutterBottom>Add new <b>Education</b> Detail</Typography>\r\n            <EducationComponent handleAdd={addNewEducation} />\r\n            <br />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Education\r\n","import React, { Component } from 'react';\r\nimport RichTextEditor from 'react-rte';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nclass MyStatefulEditor extends Component {\r\n\r\n\r\n    state = {\r\n        value: RichTextEditor.createEmptyValue()\r\n    }\r\n\r\n\r\n    onChange = (value) => {\r\n        this.setState({ value });\r\n        if (this.props.onChange) {\r\n            // Send the changes up to the parent component as an HTML string.\r\n            // This is here to demonstrate using `.toString()` but in a real app it\r\n            // would be better to avoid generating a string on each change.\r\n            this.props.onChange(\r\n                value.toString('html')\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const toolbarConfig = {\r\n            // Optionally specify the groups to display (displayed in the order listed).\r\n            display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'LINK_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\r\n            INLINE_STYLE_BUTTONS: [\r\n                { label: 'Bold', style: 'BOLD', className: 'custom-css-class' },\r\n                { label: 'Italic', style: 'ITALIC' },\r\n                { label: 'Underline', style: 'UNDERLINE' }\r\n            ],\r\n            BLOCK_TYPE_DROPDOWN: [\r\n                { label: 'Normal', style: 'unstyled' },\r\n                { label: 'Heading Large', style: 'header-one' },\r\n                { label: 'Heading Medium', style: 'header-two' },\r\n                { label: 'Heading Small', style: 'header-three' }\r\n            ],\r\n            BLOCK_TYPE_BUTTONS: [\r\n                { label: 'UL', style: 'unordered-list-item' },\r\n                { label: 'OL', style: 'ordered-list-item' }\r\n            ]\r\n        };\r\n        return (\r\n            <>\r\n                <Typography variant=\"subtitle1\" display=\"block\" gutterBottom>{this.props.label}</Typography>\r\n                <RichTextEditor\r\n                    value={this.state.value}\r\n                    onChange={this.onChange}\r\n                    toolbarConfig={toolbarConfig}\r\n                    placeholder='Hi 👋 I am a Rich Text Editor to make your resume more beautiful'\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyStatefulEditor","import React from 'react'\r\n//Material\r\nimport { Grid } from '@material-ui/core';\r\n//util\r\nimport TextField from '../utils/TextField'\r\nimport TextEditor from '../utils/Editor'\r\nimport OutlineButton from '../utils/OutlineButton'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nconst initialState = {\r\n    employer: '',\r\n    role: '',\r\n    sdate: '',\r\n    edate: '',\r\n    description: ''\r\n}\r\n\r\nfunction ExperienceComponent({ handleAdd }) {\r\n    const [metaData, setMetaData] = React.useState(initialState)\r\n    const handleChange = (event) => {\r\n        setMetaData(prev => {\r\n            return {\r\n                ...prev,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        })\r\n    }\r\n    const handleClick = () => {\r\n        handleAdd(metaData)\r\n        setMetaData(initialState)\r\n    }\r\n    const handleTextChange = (jobDescription) => {\r\n        setMetaData(prev => {\r\n            return {\r\n                ...prev,\r\n                'description': jobDescription\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ border: '.01rem solid grey', borderRadius: '5px', padding: '1rem', marginBottom: '.625rem' }}>\r\n            <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Employer'\r\n                        name='employer'\r\n                        value={metaData['employer']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Job Title'\r\n                        name='role'\r\n                        value={metaData['role']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Start Date'\r\n                        name='sdate'\r\n                        value={metaData['sdate']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='End Date'\r\n                        name='edate'\r\n                        value={metaData['edate']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextEditor onChange={handleTextChange} label='Job description'/>\r\n                </Grid>\r\n                <Grid item xs={12} md={2} >\r\n                    <OutlineButton label=\"Add\" handleClick={handleClick} endIcon={<AddCircleIcon />} size=\"small\" />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExperienceComponent\r\n","import React from 'react'\r\n//Material\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n//util\r\nimport TextField from '../utils/TextField'\r\nimport OutlineButton from '../utils/OutlineButton'\r\n\r\nfunction ExperienceDisplay({ metaData, index, handleRemove }) {\r\n\r\n    const handleChange = (event) => {\r\n        return null\r\n    }\r\n    const handleClick = () => {\r\n        return handleRemove(index)\r\n    }\r\n\r\n    return (\r\n        <div style={{ border: '.01rem solid grey', borderRadius: '5px', padding: '1rem', marginBottom: '.625rem' }}>\r\n            <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Employer'\r\n                        name='employer'\r\n                        value={metaData['employer']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Job Title'\r\n                        name='role'\r\n                        value={metaData['role']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Start Date'\r\n                        name='sdate'\r\n                        value={metaData['sdate']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='End Date'\r\n                        name='edate'\r\n                        value={metaData['edate']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={8}>\r\n                    <Typography >Job description</Typography>\r\n                    <div\r\n                        dangerouslySetInnerHTML={{ __html: metaData['description'] }}\r\n                        style={{\r\n                            border: '.01rem solid grey',\r\n                            borderRadius: '5px',\r\n                            padding: '.5rem',\r\n                            marginTop: '.625rem'\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={2} >\r\n                    <OutlineButton\r\n                        label=\"remove\"\r\n                        handleClick={handleClick}\r\n                        endIcon={<DeleteForeverIcon />}\r\n                        size=\"large\"\r\n                        color= 'error'\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExperienceDisplay\r\n","import React from 'react'\r\n\r\nimport Heading from '../../components/utils/PagesHeading'\r\nimport ToolTip from '../../components/utils/ToolTip'\r\n\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport { ADD_METADATA } from '../../reducer/constants'\r\n\r\nimport { MetaDataContext } from '../../App';\r\n\r\nimport ExperienceComponent from '../../components/steps/ExperienceComponent';\r\nimport ExperienceDisplay from '../../components/steps/ExperienceDisplay';\r\n\r\nconst writing_tips = [\r\n    'Your most recent or current job should be listed first. Then, work in reverse chronological order, from your newest to your oldest jobs.',\r\n    'When describing your job duties, avoid using personal pronouns like “I, ” “me”, \"my\" etc. ',\r\n    'Use bullet points to list your job responsibilities in short, direct sentences.',\r\n    'Showcase your skills by using strong action verbs (“led,” “organized”, \"coordinated\"). Use figures to add value when possible. For example: \"decreased production costs by 20%\"..'\r\n]\r\n\r\nfunction Experience() {\r\n    const { resumeState, resumeDispatch } = React.useContext(MetaDataContext)\r\n    const addNewExperience = (experience) => {\r\n        let new_experience_metadata = resumeState['Experience']\r\n        new_experience_metadata.push(experience)\r\n        resumeDispatch({\r\n            type: ADD_METADATA, payload: {\r\n                heading: 'Experience',\r\n                metadata: new_experience_metadata\r\n            }\r\n        })\r\n    }\r\n    const removeExperience = (index) => {\r\n        let new_experience_metadata = resumeState['Experience']\r\n        new_experience_metadata.splice(index, 1)\r\n        resumeDispatch({\r\n            type: ADD_METADATA, payload: {\r\n                heading: 'Experience',\r\n                metadata: new_experience_metadata\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid container>\r\n                <Grid item xs={12} md={8}>\r\n                    <Heading heading=\"Experience\" information=\"List your work experience, from the most recent to the oldest. Feel free to use our pre-written examples.\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <ToolTip heading=\"Expert tips for you 👨‍💻\" text={writing_tips} buttonName=\"writing tips\" />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <br />\r\n            {\r\n                resumeState.Experience.length ?\r\n                    <Typography align=\"center\" variant=\"body1\" display=\"block\" gutterBottom>Your <b>Experience</b> Details</Typography> :\r\n                    <></>\r\n            }\r\n            {\r\n                resumeState.Experience.map((experience, index) => {\r\n                    return <ExperienceDisplay metaData={experience} index={index} handleRemove={removeExperience} />\r\n                })\r\n            }\r\n            {\r\n                resumeState.Experience.length ? <><br /><br /></> : <></>\r\n            }\r\n            <Typography align=\"center\" variant=\"body1\" display=\"block\" gutterBottom>Add new <b>Experience</b></Typography>\r\n            <ExperienceComponent handleAdd={addNewExperience} />\r\n            <br />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Experience\r\n","import React from 'react'\r\n\r\nimport Heading from '../../components/utils/PagesHeading'\r\nimport ToolTip from '../../components/utils/ToolTip'\r\nimport TextEditor from '../../components/utils/Editor'\r\n\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport { ADD_METADATA } from '../../reducer/constants'\r\n\r\nimport { MetaDataContext } from '../../App';\r\n\r\nconst writing_tips = [\r\n    'Keep your achievement short and straight to the point. You can always elaborate during the interview.',\r\n    'Tailor the achievement to the job you are applying for. Show the employer exactly why you’re the best fit for this position.',\r\n    'Be specific about your background, skills and goals.',\r\n    'Remember, the best resume achievement should quickly grab recruiters’'\r\n]\r\n\r\nfunction ScholaristicAchievement() {\r\n    const {  resumeDispatch } = React.useContext(MetaDataContext)\r\n    const addNewExperience = (skill) => {\r\n        let new_Scholaristic_Achievement_metadata = skill\r\n        resumeDispatch({\r\n            type: ADD_METADATA,\r\n            payload: {\r\n                heading: 'Scholaristic Achievement',\r\n                metadata: new_Scholaristic_Achievement_metadata\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} md={8}>\r\n                    <Heading heading=\"Scholaristic Achievement\" information=\"Highlight your top achivement relevant to job profile.\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <ToolTip heading=\"Expert tips for you 🏆\" text={writing_tips} buttonName=\"writing tips\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextEditor onChange={addNewExperience} label='Add your Scholaristic Achievement (express in points for easy readibility)'/>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ScholaristicAchievement\r\n","import React from 'react'\r\n//Material\r\nimport { Grid } from '@material-ui/core';\r\n//util\r\nimport TextField from '../utils/TextField'\r\nimport TextEditor from '../utils/Editor'\r\nimport OutlineButton from '../utils/OutlineButton'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nconst initialState = {\r\n    title: '',\r\n    stack: '',\r\n    date: '',\r\n    link: '',\r\n    description: ''\r\n}\r\nfunction ProjectComponent({ handleAdd }) {\r\n    const [metaData, setMetaData] = React.useState(initialState)\r\n    const handleChange = (event) => {\r\n        setMetaData(prev => {\r\n            return {\r\n                ...prev,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        })\r\n    }\r\n    const handleClick = () => {\r\n        handleAdd(metaData)\r\n        setMetaData(initialState)\r\n    }\r\n    const handleTextChange = (projectDescription) => {\r\n        setMetaData(prev => {\r\n            return {\r\n                ...prev,\r\n                'description': projectDescription\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div style={{ border: '.01rem solid grey', borderRadius: '5px', padding: '1rem', marginBottom: '.625rem' }}>\r\n            <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Project Name'\r\n                        name='title'\r\n                        value={metaData['title']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Worked on (date)'\r\n                        name='date'\r\n                        value={metaData['date']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Stack used summary'\r\n                        name='stack'\r\n                        value={metaData['stack']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Project link | Demo'\r\n                        name='link'\r\n                        value={metaData['link']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextEditor onChange={handleTextChange} label='Project description' />\r\n                </Grid>\r\n                <Grid item xs={12} md={2} >\r\n                    <OutlineButton label=\"Add\" handleClick={handleClick} endIcon={<AddCircleIcon />} size=\"large\" />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectComponent\r\n","import React from 'react'\r\n//Material\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n//util\r\nimport TextField from '../utils/TextField'\r\nimport OutlineButton from '../utils/OutlineButton'\r\n\r\nfunction ProjectDisplay({ metaData, index, handleRemove }) {\r\n\r\n    const handleChange = (event) => {\r\n        return null\r\n    }\r\n    const handleClick = () => {\r\n        return handleRemove(index)\r\n    }\r\n\r\n    return (\r\n        <div style={{ border: '.01rem solid grey', borderRadius: '5px', padding: '1rem', marginBottom: '.625rem' }}>\r\n            <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        handleChange={handleChange}\r\n                        label='Project Name'\r\n                        name='title'\r\n                        value={metaData['title']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                <TextField\r\n                        handleChange={handleChange}\r\n                        label='Worked on (date)'\r\n                        name='date'\r\n                        value={metaData['date']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                <TextField\r\n                        handleChange={handleChange}\r\n                        label='Stack used summary'\r\n                        name='stack'\r\n                        value={metaData['stack']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                <TextField\r\n                        handleChange={handleChange}\r\n                        label='Project link | Demo'\r\n                        name='link'\r\n                        value={metaData['link']}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={8}>\r\n                    <Typography >Project description</Typography>\r\n                    <div\r\n                        dangerouslySetInnerHTML={{ __html: metaData['description'] }}\r\n                        style={{\r\n                            border: '.01rem solid grey',\r\n                            borderRadius: '5px',\r\n                            padding: '.5rem',\r\n                            marginTop: '.625rem'\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={2} >\r\n                    <OutlineButton\r\n                        label=\"remove\"\r\n                        handleClick={handleClick}\r\n                        endIcon={<DeleteForeverIcon />}\r\n                        size=\"large\"\r\n                        color= 'error'\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectDisplay\r\n","import React from 'react'\r\n\r\nimport Heading from '../../components/utils/PagesHeading'\r\nimport ToolTip from '../../components/utils/ToolTip'\r\n\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport { ADD_METADATA } from '../../reducer/constants'\r\n\r\nimport { MetaDataContext } from '../../App';\r\n\r\nimport ProjectComponent from '../../components/steps/ProjectComponent';\r\nimport ProjectDisplay from '../../components/steps/ProjectDisplay';\r\n\r\nconst writing_tips = [\r\n    'Your most recent projects.',\r\n    'Projects should reflect your skills and command on topic.',\r\n    'Use bullet points to list your project responsibilities in short, direct sentences.',\r\n    'Don\\'t forget to mention tech stack which were used by you in the project.'\r\n]\r\n\r\nfunction Project() {\r\n    const { resumeState, resumeDispatch } = React.useContext(MetaDataContext)\r\n    const addNewProject = (project) => {\r\n        let new_project_metadata = resumeState['Project']\r\n        new_project_metadata.push(project)\r\n        resumeDispatch({\r\n            type: ADD_METADATA, payload: {\r\n                heading: 'Project',\r\n                metadata: new_project_metadata\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeProject = (index) => {\r\n        let new_project_metadata = resumeState['Project']\r\n        new_project_metadata.splice(index, 1)\r\n        resumeDispatch({\r\n            type: ADD_METADATA, payload: {\r\n                heading: 'Project',\r\n                metadata: new_project_metadata\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid container>\r\n                <Grid item xs={12} md={8}>\r\n                    <Heading heading=\"Project\" information=\"List your coolest and best projects to showcase your skills.\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <ToolTip heading=\"Expert tips for you 🚧\" text={writing_tips} buttonName=\"writing tips\" />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <br />\r\n            {\r\n                resumeState.Project.length ?\r\n                    <Typography align=\"center\" variant=\"body1\" display=\"block\" gutterBottom>Your <b>Projects</b></Typography> :\r\n                    <></>\r\n            }\r\n            {\r\n                resumeState.Project.map((project, index) => {\r\n                    return <ProjectDisplay metaData={project} index={index} handleRemove={removeProject} />\r\n                })\r\n            }\r\n            {\r\n                resumeState.Project.length ? <><br /><br /></> : <></>\r\n            }\r\n            <Typography align=\"center\" variant=\"body1\" display=\"block\" gutterBottom>Add new <b>Project</b></Typography>\r\n            <ProjectComponent handleAdd={addNewProject} />\r\n            <br />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Project\r\n","import React from 'react'\r\n\r\nimport Heading from '../../components/utils/PagesHeading'\r\nimport ToolTip from '../../components/utils/ToolTip'\r\nimport TextEditor from '../../components/utils/Editor'\r\n\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport { ADD_METADATA } from '../../reducer/constants'\r\n\r\nimport { MetaDataContext } from '../../App';\r\n\r\nconst writing_tips = [\r\n    'List your top skills. The more relevant they are to the job you are applying for, the better.',\r\n    'Use one or two keywords, not complete sentences. For example: \"Project Management\",  \"Online Marketing\", \"HTML\", \"SEO\", etc.',\r\n    'Make sure to include all important skills for the job you are applying for, even if you are not proficient on some of them.',\r\n    'Keep it short. Try to showcase no more than 8 skills.'\r\n]\r\n\r\nfunction Experience() {\r\n    const {  resumeDispatch } = React.useContext(MetaDataContext)\r\n    const addNewExperience = (skill) => {\r\n        let new_skill_metadata = skill\r\n        resumeDispatch({\r\n            type: ADD_METADATA,\r\n            payload: {\r\n                heading: 'Skill',\r\n                metadata: new_skill_metadata\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} md={8}>\r\n                    <Heading heading=\"SKILLS\" information=\"Highlight 6-8 of your top skills.\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <ToolTip heading=\"Expert tips for you 🤹\" text={writing_tips} buttonName=\"writing tips\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextEditor onChange={addNewExperience} label='Add your skills as suggested in tips!'/>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Experience\r\n","import * as React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nexport default function BasicTable({ column, rows }) {\r\n    return (\r\n        <TableContainer>\r\n            <Table aria-label=\"simple table\" size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {\r\n                            column.map((element) => {\r\n                                return (\r\n                                    <TableCell size=\"small\" sx={{\r\n                                        fontSize: 12,\r\n                                        gap: 0,\r\n                                        fontWeight: 'bold',\r\n                                        pb:0\r\n                                    }}>\r\n                                        {element}\r\n                                    </TableCell>\r\n                                )\r\n                            })\r\n                        }\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row, index) => (\r\n                        <TableRow\r\n                            key={index}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            {\r\n                                row.map((element, i) => {\r\n                                    if (i === 0) {\r\n                                        return (\r\n                                            <TableCell component=\"th\" scope=\"row\" size=\"small\" sx={{ fontSize: 10 }}>\r\n                                                {element}\r\n                                            </TableCell>\r\n                                        )\r\n                                    }\r\n                                    return <TableCell size=\"small\" sx={{ fontSize: 10 }}>{element}</TableCell>\r\n                                })\r\n                            }\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/MNITLOGO.7f7cc00d.png\";","import React from 'react'\r\nimport { Grid, Typography, Container } from '@material-ui/core'\r\n//context\r\nimport { MetaDataContext } from '../../App';\r\n//util\r\nimport Table from '../../components/utils/Table'\r\n\r\nimport './MNITresume.css';\r\n\r\nimport logo from '../../images/MNITLOGO.png'\r\n\r\nconst SectionDivider = ({ topic }) => {\r\n    return (\r\n        <>\r\n            <div id=\"sectionStyle\">\r\n                <Typography variant='subtitle1' className=\"topic\"><b>{topic}</b></Typography>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction MNITresume() {\r\n    const { resumeState } = React.useContext(MetaDataContext)\r\n\r\n    const generateRows = () => {\r\n        const rows = []\r\n        resumeState['Education'].forEach((education) => {\r\n            const temp = []\r\n            temp.push(education['degree'])\r\n            temp.push(education['college'])\r\n            temp.push(education['date'])\r\n            temp.push(education['grade'])\r\n\r\n            rows.push(temp)\r\n        })\r\n        return rows\r\n    }\r\n    const _exportPdf = () => {\r\n        window.print();\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (resumeState['Print'] !== 0)\r\n            _exportPdf();\r\n    }, [resumeState['Print']])\r\n\r\n    return (\r\n        <div id=\"capturePDF\">\r\n            <div id=\"capture\">\r\n                <Grid container>\r\n                    <Grid item xs={3}>\r\n                        <img\r\n                            src={logo}\r\n                            width=\"135rem\"\r\n                            height=\"135rem\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        {resumeState['Personal Info']['fname'] === '' ? <></> : <Typography variant='h5'><b>{`${resumeState['Personal Info']['fname']} ${resumeState['Personal Info']['lname']}`}</b></Typography>}\r\n                        {resumeState['Personal Info']['branch'] === '' ? <></> : <Typography variant='body2'><b>Branch:</b>{` ${resumeState['Personal Info']['branch']}`}</Typography>}\r\n                        {resumeState['Personal Info']['college'] === '' ? <></> : <Typography variant='body2'><b>{` ${resumeState['Personal Info']['college']}`}</b></Typography>}\r\n                        {resumeState['Personal Info']['email'] === '' ? <></> : <Typography variant='body2'><b>Email:</b>{` ${resumeState['Personal Info']['email']}`}</Typography>}\r\n                        {resumeState['Personal Info']['city'] === '' ? <></> : <Typography variant='body2'><b>{` ${resumeState['Personal Info']['city']}, ${resumeState['Personal Info']['state']} (${resumeState['Personal Info']['zip']})`}</b></Typography>}\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={4}>\r\n                                {resumeState['Personal Info']['linkedin'] === '' ? <></> : <a href={`${resumeState['Personal Info']['linkedin']}`}><Typography variant='body2'><b>LinkedIn</b></Typography></a>}\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                {resumeState['Personal Info']['github'] === '' ? <></> : <a href={`${resumeState['Personal Info']['github']}`}><Typography variant='body2'><b>GitHub</b></Typography></a>}\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                {resumeState['Personal Info']['personal'] === '' ? <></> : <a href={`${resumeState['Personal Info']['personal']}`}><Typography variant='body2'><b>Portfolio</b></Typography></a>}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Grid container direction=\"column\" spacing={1}>\r\n                            <Grid item xs={12}>{resumeState['Personal Info']['stream'] === '' ? <></> : <Typography variant='body2'><b>{` ${resumeState['Personal Info']['stream']}`}</b></Typography>}</Grid>\r\n                            <Grid item xs={12}>{resumeState['Personal Info']['gender'] === '' ? <></> : <Typography variant='body2'><b>{` ${resumeState['Personal Info']['gender']}`}</b></Typography>}</Grid>\r\n                            <Grid item xs={12}>{resumeState['Personal Info']['dob'] === '' ? <></> : <Typography variant='body2'><b>DOB:</b>{` ${resumeState['Personal Info']['dob']}`}</Typography>}</Grid>\r\n                            <Grid item xs={12}>{resumeState['Personal Info']['phone'] === '' ? <></> : <Typography variant='body2'><b>Phone:</b>{` ${resumeState['Personal Info']['phone']}`}</Typography>}</Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {\r\n                    resumeState['Education'].length ?\r\n                        <>\r\n                            <SectionDivider topic='Education' />\r\n                            <Container>\r\n                                <Table column={['Examination', 'University', 'Graduation', 'CGPA /%']} rows={generateRows()} />\r\n                            </Container>\r\n                        </> :\r\n                        <></>\r\n                }\r\n                {\r\n                    resumeState['Experience'].length ?\r\n                        <>\r\n                            <SectionDivider topic='Experience' />\r\n                            <Container>\r\n                                <Grid container>\r\n                                    {\r\n                                        resumeState['Experience'].map((work) => {\r\n                                            return (\r\n                                                <Grid item xs={12}>\r\n                                                    <Grid container>\r\n                                                        <Grid item xs={6}>\r\n                                                            <Typography variant='body2'><b>{work['employer']}</b> | {work['role']}</Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={6}>\r\n                                                            <Typography variant='subtitle2' sx={{ fontSize: 9 }} align=\"right\">\r\n                                                                ( {work['sdate']} - {work['edate']} )\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                            <div\r\n                                                                dangerouslySetInnerHTML={{ __html: work['description'] }}\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Grid>\r\n                            </Container>\r\n                        </> :\r\n                        <></>\r\n                }\r\n                {\r\n                    resumeState['Project'].length ?\r\n                        <>\r\n                            <SectionDivider topic='Project' />\r\n                            <Container>\r\n                                <Grid container>\r\n                                    {\r\n                                        resumeState['Project'].map((work) => {\r\n                                            return (\r\n                                                <Grid item xs={12}>\r\n                                                    <Grid container>\r\n                                                        <Grid item xs={6}>\r\n                                                            <Typography variant='body2'><b>{work['title']}</b> | {work['stack']} - <a href={work['link']}>GitHub</a></Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={6}>\r\n                                                            <Typography variant='subtitle2' sx={{ fontSize: 9 }} align=\"right\">\r\n                                                                ( {work['date']} )\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                            <div\r\n                                                                dangerouslySetInnerHTML={{ __html: work['description'] }}\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Grid>\r\n                            </Container>\r\n                        </> :\r\n                        <></>\r\n                }\r\n                {\r\n                    resumeState['Skill'] === '' ? <></> :\r\n                        <>\r\n                            <SectionDivider topic='Technical Skills' />\r\n                            <Container>\r\n                                <div\r\n                                    dangerouslySetInnerHTML={{ __html: resumeState['Skill'] }}\r\n                                />\r\n                            </Container>\r\n                        </>\r\n                }\r\n                {\r\n                    resumeState['Scholaristic Achievement'] === '' ? <></> :\r\n                        <>\r\n                            <SectionDivider topic='Scholaristic Achievement' />\r\n                            <Container>\r\n                                <div\r\n                                    dangerouslySetInnerHTML={{ __html: resumeState['Scholaristic Achievement'] }}\r\n                                />\r\n                            </Container>\r\n                        </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MNITresume\r\n","import React from 'react'\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport { StepsContext, MetaDataContext } from '../App';\r\nimport { ADD_METADATA } from '../reducer/constants'\r\n\r\nimport Button from '../components/utils/Button'\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nimport { next, skip, back, reset } from '../components/utils/StepAction'\r\n\r\n// Pages in form\r\nimport PersonalInfo from './forms/PersonalInfo';\r\nimport Education from './forms/Education';\r\nimport Experience from './forms/Experience';\r\nimport ScholaristicAchievement from './forms/ScholaristicAchievement';\r\nimport Project from './forms/Project';\r\nimport Skill from './forms/Skill';\r\n\r\n//resume template\r\nimport MNITresume from './templates/MNITresume';\r\n\r\nfunction PagesController() {\r\n\r\n    const { stepsState, stepsDispatch } = React.useContext(StepsContext);\r\n    const { resumeState, resumeDispatch } = React.useContext(MetaDataContext)\r\n    const [currentState, setCurrentState] = React.useState({\r\n        index: 0,\r\n        metadata: stepsState[0]\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        let found = false\r\n        for (let i = stepsState.length - 1; i >= 0; i--) {\r\n            let step = stepsState[i]\r\n            if (step.completed) {\r\n                if (i === stepsState.length - 1) {\r\n                    console.log('Done')\r\n                } else {\r\n                    setCurrentState({\r\n                        index: i + 1,\r\n                        metadata: stepsState[i + 1]\r\n                    })\r\n                }\r\n                found = true\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!found) {\r\n            setCurrentState({\r\n                index: 0,\r\n                metadata: stepsState[0]\r\n            })\r\n        }\r\n    }, [stepsState])\r\n\r\n    const PagePicker = () => {\r\n        switch (currentState.metadata.heading) {\r\n            case 'Personal Info':\r\n                return <PersonalInfo />\r\n            case 'Education':\r\n                return <Education />\r\n            case 'Experience':\r\n                return <Experience />\r\n            case 'Project':\r\n                return <Project />\r\n            case 'Skills':\r\n                return <Skill />\r\n            case 'Scholaristic Achievement':\r\n                return <ScholaristicAchievement />\r\n            case 'Review and Download':\r\n                {\r\n                    switch (resumeState['Template']) {\r\n                        case 'MNITresume':\r\n                            return <MNITresume />\r\n                        default:\r\n                            return resumeState['Template'] + ' not found'\r\n                    }\r\n                }\r\n            default:\r\n                return currentState.metadata.heading\r\n        }\r\n    }\r\n\r\n    const handleBack = () => {\r\n        if (currentState.index !== 0)\r\n            back(stepsDispatch, stepsState[currentState.index - 1])\r\n        else\r\n            back(stepsDispatch, currentState.metadata)\r\n    }\r\n    const handleNext = () => {\r\n        next(stepsDispatch, currentState.metadata)\r\n    }\r\n    const handlePrint = () => {\r\n        resumeDispatch({\r\n            type: ADD_METADATA, payload: {\r\n                'heading': 'Print',\r\n                'metadata': resumeState['Print'] + 1\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {PagePicker()}\r\n            <br />\r\n            <Container>\r\n                <Grid\r\n                    container\r\n                    spacing={1}\r\n                    id=\"printHide\"\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item xs={12} md={2}>\r\n                        {\r\n                            currentState.index === 0 ?\r\n                                <></> :\r\n                                <Button\r\n                                    label='Back'\r\n                                    handleClick={handleBack}\r\n                                    color=\"warning\"\r\n                                    fullWidth\r\n                                    disableRipple={ true}\r\n                                />\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        {\r\n                            currentState.index === stepsState.length - 1 ?\r\n                                <Button\r\n                                    label='Print'\r\n                                    handleClick={handlePrint}\r\n                                    endIcon={<PrintIcon />}\r\n                                    fullWidth\r\n                                    disableRipple={ true}\r\n                                /> :\r\n                                <Button\r\n                                    label='Save and Continue'\r\n                                    handleClick={handleNext}\r\n                                    endIcon={<NavigateNextIcon />}\r\n                                    color=\"success\"\r\n                                    fullWidth\r\n                                    disableRipple={ true}\r\n                                />\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PagesController\r\n","import React from 'react'\r\n//Components\r\nimport Navigation from '../../components/steps/Navigation'\r\n//Pages\r\nimport PageController from '../PagesController'\r\n\r\nfunction BuildReume() {\r\n    return (\r\n        <>\r\n            <Navigation  />\r\n            <br id=\"printHide\" />\r\n            <PageController />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BuildReume\r\n","export default __webpack_public_path__ + \"static/media/Component.61226ace.svg\";","export default __webpack_public_path__ + \"static/media/MNITresume.4854a1db.png\";","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Typography, Grid, Container } from '@material-ui/core'\r\nimport { templates } from '../../reducer/constants'\r\n\r\nimport { MetaDataContext } from '../../App';\r\nimport { ADD_METADATA } from '../../reducer/constants';\r\n\r\nimport Button from \"../../components/utils/Button\";\r\nimport './Template.css'\r\n\r\nimport logo from '../../images/Component.svg'\r\nimport mnitresume from '../../images/MNITresume.png'\r\n\r\nconst ImageHoverZoom = ({ imagePath, name }) => {\r\n    const { resumeDispatch } = React.useContext(MetaDataContext)\r\n    const history = useHistory();\r\n\r\n    const handleClick = () => {\r\n        resumeDispatch({\r\n            type: ADD_METADATA,\r\n            payload: {\r\n                'heading': 'Template',\r\n                'metadata': name\r\n            }\r\n        })\r\n        history.push(\"/build\");\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"zoom\">\r\n                <img src={imagePath} alt=\"\" className=\"hover-zoom\" style={{marginBottom:'2rem'}} />\r\n            </div>\r\n            <Grid container>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant='h6' align=\"left\" sx={{ pt: 0, mt: 0 }} gutterbottom>\r\n                        {name}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Button\r\n                        label=\"Use this template\"\r\n                        color=\"warning\"\r\n                        size=\"small\"\r\n                        sx={{\r\n                            backgroundColor: \"#fe8c26\",\r\n                        }}\r\n                        handleClick={handleClick}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Template() {\r\n    return (\r\n        <Container>\r\n            <Grid container alignItems=\"center\" spacing={1}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h4\" align=\"left\">\r\n                        <b>\r\n                        Resume Templates for Every Job\r\n                        </b>\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography variant=\"body1\" align=\"left\">\r\n                        Whether you’re looking for something creative and fun or elegant and\r\n                        powerful, we’ve got resume templates that can help you win the job.\r\n                        Once you’ve found your favorite design, use our super simple resume\r\n                        builder to make a standout application quickly and easily.\r\n                    </Typography>\r\n                    <br />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <img src={logo} style={{width:'100%',height:'100%'}}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant='h6' align='center'>\r\n                        CHOOSE YOUR <b>RESUME TEMPLATE</b>\r\n                    </Typography>\r\n                    <Typography variant='body2' sx={{ fontSize: 11 }} gutterBottom align='center'>\r\n                        Remember, you can always change your template later on.\r\n                    </Typography>\r\n                </Grid>\r\n                {\r\n                    templates.map((template) => {\r\n                        return (\r\n                            <Grid item xs={4} md={4}\r\n                                className=\"container\">\r\n                                <ImageHoverZoom\r\n                                    imagePath={mnitresume}\r\n                                    name={template}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Template\r\n","import * as React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nexport default function SimpleAccordion({ titles, descriptions }) {\r\n    return (\r\n        <div>\r\n            {\r\n                titles.map((title, index) => {\r\n                    return (\r\n                        <Accordion sx={{ mb: 2 }}>\r\n                            <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                            >\r\n                                <Typography variant='h6'>{title}</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <Typography variant='body1'>\r\n                                    {descriptions[index]}\r\n                                </Typography>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/demo.b9b8b22a.png\";","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//material ui\r\nimport { Container, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport Button from \"../../components/utils/Button\";\r\nimport Accordion from '../../components/utils/Accordion'\r\n\r\nimport styleresume from '../../images/demo.png';\r\n\r\nconst points = [\r\n    \"Customizable, HR-approved, ready-to-use resume templates\",\r\n    \"Step-by-step guidance and expert tips to create a targeted, job-scoring resume\",\r\n    \"Free industry-specific, pre-written examples you can add with the click of a button\",\r\n];\r\n\r\nconst titles = [\r\n    'Is Resume Build the best resume builder?',\r\n    'Can I build my resume for free using this resume builder?',\r\n    'What’s the best resume template to use?',\r\n    'What should I include on my resume?',\r\n    'How long should my resume be?',\r\n    'How should I format my resume?'\r\n]\r\n\r\nconst descriptions = [\r\n    `Are you after a resume builder that is: a) proven to help score jobs at the world’s best companies, b) quick, easy, and affordable to use, and c) equipped with HR-approved resume templates and pre-written job description bullet points?\r\n\r\n    If you answered “Yes,” then you’ll understand why thousands of job seekers believe that Resume Build is the best resume builder on the market. \r\n    \r\n    Our online resume maker is designed to help job seekers just like you to create a professional resume in mere minutes. \r\n    \r\n    Considering that many other options—particularly free resume builders— are incredibly clunky and difficult to use, this is no easy feat. Worse still, many of our competitors’ offerings simply spit out generic resumes that aren’t formatted or written to be HR-friendly.\r\n    \r\n    These are a few of the many reasons why so many people have turned to Resume Build to help them transform their job prospects.`,\r\n    `Are you wondering “Can I really build my resume for free with Resume Build’s resume software?” or “Is this a free resume builder?” The answer is that it’s free to try. Once you sign up, you’ll also gain access to plenty of free resume templates, free resume job description bullet points, and free resume tips to help you create an unforgettable resume.`,\r\n    `The truth of the matter is that there isn’t just one template to suit everyone. That’s why we provide a wide variety of professionally made resume templates to ensure that there’s something to suit each person’s unique situation, goals, and aesthetic preferences.\r\n\r\n    When browsing resume templates in our resume template library, it’s always helpful to keep in mind the message you want to send to hiring managers about yourself.\r\n    \r\n    If you’re still stuck, here’s a quick guide that will help you make the right choice:\r\n    \r\n    Do you want to appear creative and cutting-edge? Opt for the Cool or Awesome template. \r\n    Do you want hiring managers to focus on your professionalism? The Professional or Contemporary template will do the trick. \r\n    Do you want to play it safe with a more standard template? Try the Simple or Modern resume template`,\r\n    `There are a number of key pieces of information that you need to include in your resume. The following six resume sections cover the most pertinent information hiring managers are looking for:\r\n\r\n    Contact information: Your name, address, phone number, and email address.\r\n    A Resume Summary or Resume Objective: A section that succinctly conveys why you’re a standout candidate for the given position. \r\n    Employment history: An overview of your most relevant professional experiences, with an emphasis on your key achievements. \r\n    Education: Provide details about your degree or diploma.\r\n    Training and certifications: Note any training courses and certifications that are relevant to the job here.\r\n    Skills: List both hard (technical) skills and soft (interpersonal) skills you offer. \r\n    But before you get writing, keep in mind that you will need to tailor your resume to the given role you are applying for. \r\n    \r\n    A simple rule of thumb is to stop thinking, “I can build my resume in a way that lets me apply to any position I want,” and start thinking, “I need to build my resume in a way that highlights how suitable I am for the specific position I’m after.”\r\n    \r\n    This simple switch in thinking will help you to address the precise qualities a hiring manager is after. Remember, hiring managers look to your resume to see if you’re an ideal fit for the specific role they’re hiring for. So if your resume is too generic, they’ll simply think, “Next!”\r\n    \r\n    That’s why it’s vital to analyze the advertisement of the role you want for keywords that indicate what the hiring manager is after. Once you identify these keywords, you should integrate any that are relevant to you throughout each of the sections we mentioned above.`,\r\n    `The length of your resume will depend on how long you have been working for. Our experts recommend one page for every 10 years of work. \r\n\r\n    So if you’re a high school or college student, wish to apply for an internship, or have 10 years or fewer of professional experience, a one page resume will be sufficient. However, if you have been working for 10 or more years, you may add a page for every decade you’ve been in the workforce.`,\r\n    `The resume format you choose can influence the way a hiring manager perceives your job application. While there are a handful of different resume formats to choose from, the good news is that there’s one that will suit most professionals: the reverse-chronological resume format. \r\n\r\n    This resume format emphasizes your professional experience, as this is the part of your resume hiring managers are generally most interested in. It formats your work history from most to least recent, so hiring managers can clearly see your career progression. Smart, right?\r\n    \r\n    If you're an applicant who wishes to take the focus off of your limited work experience, it may be wise to opt for the combination resume format. Also referred to as the hybrid format, this resume format is a blend of the aforementioned reverse-chronological resume format and the functional format. The functional format aims to de-emphasize your lack of experience by instead putting your skills front and center.`\r\n]\r\n\r\nfunction Landing() {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n            >\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h4\" align=\"left\">\r\n                        <b>\r\n                            Make a Job-Winning Resume in Minutes With Our Simple Resume\r\n                            Builder\r\n                        </b>\r\n                    </Typography>\r\n                    <br />\r\n                    {points.map((point) => {\r\n                        return (\r\n                            <Typography variant=\"h6\" align=\"left\">\r\n                                ✔️ {point}\r\n                            </Typography>\r\n                        );\r\n                    })}\r\n                    <br />\r\n                    <Button\r\n                        label=\"BUILD MY RESUME\"\r\n                        color=\"warning\"\r\n                        size=\"large\"\r\n                        sx={{\r\n                            fontSize: 30,\r\n                            fontWeight: \"bold\",\r\n                            backgroundColor: \"#fe8c26\",\r\n                        }}\r\n                        handleClick={() => {\r\n                            history.push(\"/template\");\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <img src={styleresume} style={{ width: '100%', height: '100%' }} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" align=\"left\">\r\n                        <b>\r\n                            Expert Answers to Common Resume Builder Questions\r\n                        </b>\r\n                    </Typography>\r\n                    <br/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Accordion titles={titles} descriptions={ descriptions}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Landing;\r\n","export default __webpack_public_path__ + \"static/media/logo.7be60a41.svg\";","import React from 'react'\r\nimport { Grid} from '@material-ui/core'\r\nimport Button from '../utils/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport logo from '../../images/logo.svg';\r\n\r\nfunction Navbar() {\r\n    const history = useHistory();\r\n    const handleBuild = () => {\r\n        history.push('/template')\r\n    }\r\n    return (\r\n        <div id=\"printHide\">\r\n            <Grid\r\n                container direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"flex-end\"\r\n                spacing={1}\r\n            >\r\n                <Grid item xs={5}>\r\n                    <div style={{ height: '2.2rem', width: '9rem', margin: 0, marginLeft: '2rem',cursor:'pointer' }} onClick={() => {\r\n                        history.push('/ResumeBuilder')\r\n                    }}>\r\n                        <img src={logo} />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Button\r\n                        label=\"Build resume\"\r\n                        size='small'\r\n                        color=\"warning\"\r\n                        sx={{\r\n                            mt: 1,\r\n                            backgroundColor: \"#fe8c26\"\r\n                        }}\r\n                        handleClick={ handleBuild }\r\n                    />\r\n                    \r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <hr/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useReducer, createContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n//context reducers\nimport { stepsReducer } from \"./reducer/steps\";\nimport { resumeReducer } from \"./reducer/resume\";\n//Constant\nimport { initialSteps, initialMetaData } from \"./reducer/constants\";\n//route DOM\nimport BuildResume from \"./pages/Page/BuildReume\";\nimport Template from \"./pages/Page/Template\";\nimport Landing from \"./pages/Page/Landing\";\n\n//navbar\nimport Navbar from \"./components/navbar/Navbar\";\n\n// created a context\nexport const StepsContext = createContext();\nexport const MetaDataContext = createContext();\n\nfunction App() {\n  const [stepsState, stepsDispatch] = useReducer(stepsReducer, initialSteps);\n  const [resumeState, resumeDispatch] = useReducer(\n    resumeReducer,\n    initialMetaData\n  );\n  return (\n    <StepsContext.Provider value={{ stepsState, stepsDispatch }}>\n      <MetaDataContext.Provider value={{ resumeState, resumeDispatch }}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/ResumeBuilder\">\n            <Landing />\n          </Route>\n          <Route exact path=\"/build\">\n            <BuildResume />\n          </Route>\n          <Route exact path=\"/template\">\n            <Template />\n          </Route>\n          <Route path=\"/\">\n            <Landing />\n          </Route>\n        </Switch>\n      </MetaDataContext.Provider>\n    </StepsContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}